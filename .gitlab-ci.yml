# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: maven:3.8.4

cache:
  paths:
    #- .m2/repository/
    - target/
    
stages:          # List of stages for jobs, and their order of execution
  - build
  - codeQuality
  - issue
  - test
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - mvn -v 
    #clean install -DskipTests=true

codeQuality-job: # This job runs in the cod quality stage to fetch the code smells of the entire project.
  image: ubuntu:latest
  stage: codeQuality
  rules:
    - if: '$CI_COMMIT_BRANCH == "pipelineIntegration"'
    - if: '$CI_COMMIT_BRANCH == "dev"'
  dependencies:
    - build-job
  script:
    - echo "Checking code smells"
    - java --version
    - echo $CI_PROJECT_PATH
    - java -jar $CI_PROJECT_DIR/smells/DesigniteJava.jar -i $CI_PROJECT_DIR -o smells/ -d
  artifacts:
    paths:
      - smells/
      - $CI_PROJECT_DIR

issue-job:
  image: "python:3.10"
  stage: issue
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  dependencies:
    - codeQuality-job
  before_script:
    - sudo apt-get update && sudo apt-get install -y python3-pip
  script:
    - ls smells/ -a
    - echo "installing dependencies"
    - pip install -r $CI_PROJECT_DIR/requirements.txt
    - python3 --version
    - python3 $CI_PROJECT_DIR/smells/issue.py $CI_COMMIT_SHA

unit-test-job:   # This job runs in the test stage.
  #image: maven:3.8.8
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - mvn -v
    - mvn clean test

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
